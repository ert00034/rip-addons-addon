name: Update Impacted Addons

on:
  schedule:
    - cron: '17 5 * * *' # daily at 05:17 UTC
  workflow_dispatch:
    inputs:
      force_release:
        description: 'Force release even if data did not change'
        required: false
        default: 'false'

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install fetch polyfill (Node 18+ has fetch, but ensure)
        run: |
          npm init -y >/dev/null 2>&1 || true
          npm install --no-audit --no-fund --silent node-fetch@3

      - name: Run generator
        env:
          IMPACTED_FEED_URL: ${{ secrets.IMPACTED_FEED_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node scripts/generate-impacted.js --out RipAddons/data/impacted_addons.lua

      - name: Detect changes
        id: changes
        run: |
          FORCE='${{ inputs.force_release }}'
          if [ "$FORCE" = "true" ]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            if git diff --quiet RipAddons/data/impacted_addons.lua; then
              echo "changed=false" >> "$GITHUB_OUTPUT"
            else
              echo "changed=true" >> "$GITHUB_OUTPUT"
            fi
          fi

      - name: Commit changes
        if: steps.changes.outputs.changed == 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add RipAddons/data/impacted_addons.lua
          git commit -m "chore: update impacted_addons.lua [ci]"
          git push

      - name: Compute release version
        if: steps.changes.outputs.changed == 'true'
        id: ver
        run: |
          VERSION=$(date -u +%Y.%m.%d-%H%M)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Create and push tag to trigger release
        if: steps.changes.outputs.changed == 'true'
        run: |
          TAG="v${{ steps.ver.outputs.version }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists; skipping"
            exit 0
          fi
          git tag "$TAG"
          git push origin "$TAG"

      - name: Package zip (updater)
        if: steps.changes.outputs.changed == 'true'
        run: |
          zip -r RipAddons-v${{ steps.ver.outputs.version }}.zip RipAddons
          cp RipAddons-v${{ steps.ver.outputs.version }}.zip RipAddons.zip

      - name: Create GitHub Release (updater)
        if: steps.changes.outputs.changed == 'true'
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.ver.outputs.version }}
          name: RIP Addons v${{ steps.ver.outputs.version }}
          body: |
            Automated data update and package for version ${{ steps.ver.outputs.version }}.
          allowUpdates: true
          replacesArtifacts: true
          artifacts: |
            RipAddons-v${{ steps.ver.outputs.version }}.zip
            RipAddons.zip
          artifactErrorsFailBuild: true
          makeLatest: true


